{
  "project": "The-Dev-Terminal",
  "goal": "Build a fast, offline, macOS-first terminal emulator with a Metal (wgpu) renderer, PTY + VT parsing, editor-grade mouse UX, and plugin-ready core. Ship iteratively with tests and strict guardrails.",
  "stack": {
    "language": "Rust (stable, 2024 edition)",
    "platform": "macOS (Metal via wgpu)",
    "windowing": "winit",
    "gpu": "wgpu (Metal backend)",
    "pty": "portable-pty",
    "vt": "vte",
    "text": "harfbuzz_rs + glyphon/cosmic-text (initial)",
    "search": "tantivy (later)",
    "scripts": "Lua (mlua) + WASM (wasmtime) later",
    "config": "serde + TOML/JSON"
  },
  "agents": {
    "required": [
      "git-expert","ipc-communication","async-rust-expert","desktop-app-expert",
      "accessibility-expert","lua-scripting-expert","clipboard-manager",
      "concurrent-programming","research-expert","worker-optimization","wgpu-expert",
      "frontend-expert","tantivy-search-expert","terminal-expert","memory-management",
      "desktop-integration","database-migrations","text-rendering-expert","wasm-plugin-expert",
      "react-hooks-master","uniffi-ffi-expert","webgl-expert","optimization-expert",
      "devops-expert","pty-specialist","backend-expert","state-management-expert",
      "keyboard-shortcuts","macos-developer-expert","code-reviewer-expert","lint-staged-expert",
      "tokio-expert","vite-expert","rust-workspace-expert","zustand-expert","xterm-expert",
      "context7-expert","theme-system","build-optimization-expert","error-handler-expert",
      "terminal-emulation-expert","jest-expert"
    ],
    "notes": "Use only when relevant; prefer Rust-native solutions. Assign small tasks per iteration."
  },
  "mcp_servers": {
    "policy": "Aggressively leverage all available MCP servers for docs retrieval, code search, linting, test suggestions, but never execute destructive commands without tests/CI passing.",
    "priority": ["context7 (docs fetch)","git","filesystem","process","http","shell"],
    "usage_rules": [
      "If unsure about an API or crate behavior, call docs MCP (context7).",
      "Before big refactors: run code search MCP to find call-sites.",
      "Never rely on remote services; everything must run offline after install."
    ]
  },
  "guardrails": {
    "iteration_limit_loc": 300,
    "max_files_per_iter": 5,
    "branch": "feat/metal-first-light",
    "ci_checks": [
      "cargo check",
      "cargo test -q",
      "RUST_LOG=info,wgpu_core=warn WGPU_BACKEND=metal cargo run --release -- --smoketest"
    ],
    "render_loop_rules": [
      "Render only on RedrawRequested.",
      "Use EventLoopProxy from PTY thread; never call window.request_redraw() off the UI thread.",
      "Always submit and present each frame; reconfigure surface on Lost/Outdated."
    ],
    "input_rules": [
      "Forward ReceivedCharacter + Enter/Backspace/Tab/Esc + arrows (ESC[A..D) to PTY.",
      "Resize PTY (rows/cols) on window resize."
    ],
    "vt_rules": [
      "Use vte::Parser; implement print, CR, LF, ED, CUP first; then expand.",
      "Maintain a Grid (cells + attrs + cursor + scrollback)."
    ],
    "stop_conditions": [
      "If smoketest fails → fix before proceeding.",
      "If diff is empty or only comments → replan (STALL RECOVERY).",
      "If blocked >20 min → produce BLOCKER report with hypothesis + micro-experiments."
    ]
  },
  "links": [
    "https://github.com/raphamorim/rio",
    "https://github.com/wez/wezterm/tree/main/termwiz",
    "https://docs.rs/wgpu/latest/wgpu/",
    "https://github.com/gfx-rs/wgpu",
    "https://github.com/rust-windowing/winit",
    "https://github.com/wez/portable-pty",
    "https://docs.rs/vte/latest/vte/",
    "https://github.com/alexheretic/ab-glyph/tree/master/glyphon",
    "https://harfbuzz.github.io/ (HarfBuzz docs)",
    "https://github.com/linebender/cosmic-text",
    "https://github.com/quickwit-oss/tantivy",
    "https://github.com/khvzak/mlua",
    "https://github.com/bytecodealliance/wasmtime"
  ],
  "acceptance_definition_phase1": [
    "Window opens and presents 3 frames in smoketest mode then exits 0.",
    "Interactive zsh prompt appears, no raw CSI garbage.",
    "Typing `echo OK` shows `OK` on next line.",
    "Cursor blinks and tracks input.",
    "Resize updates PTY rows/cols; no surface errors."
  ]
}
